{"version":3,"sources":["./src/app/components/request/request.component.ts","./src/app/components/request/request.component.html","./src/app/components/request/request.module.ts","./src/app/components/request/request.service.ts"],"names":[],"mappings":"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","file":"components-request-request-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { RequestService } from './request.service';\r\nimport { Events } from '../events/events.model';\r\nimport { AppComponent } from '../../app.component';\r\nimport { CacheService } from '../../utils/cache/cache.service';\r\nimport { DialogService } from '../../utils/components/dialog/dialog.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DialogComponent } from '../../utils/components/dialog/dialog.component';\r\nimport { Constants } from '../../utils/constants';\r\n\r\n@Component({\r\n  selector: 'app-request',\r\n  templateUrl: './request.component.html',\r\n  styleUrls: ['./request.component.scss']\r\n})\r\nexport class RequestComponent implements OnInit {\r\n\r\n  dataSource: Events[];\r\n  public blSpinner = false;\r\n  public notFound = true;\r\n  public txtNotFound = Constants.GET_REQUEST_NOTFOUND;\r\n  public buttonRechazar = Constants.BUTTON_RECHAZAR;\r\n  public buttonAceptar = Constants.BUTTON_ACEPTAR;\r\n\r\n  constructor(\r\n    private _requestService: RequestService,\r\n    private _matDialog: MatDialog,\r\n    private _dialogService: DialogService,\r\n    private _cacheService: CacheService,\r\n    private _appComponent: AppComponent\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getRequests();\r\n  }\r\n\r\n  acceptEvent(event: Events): void {\r\n    event.userAdmId = this._cacheService.load(\"userId\");\r\n    event.stateId = 1;\r\n    this.updateEvent(event);\r\n  }\r\n\r\n  discardEvent(event: Events): void {\r\n    event.userAdmId = this._cacheService.load(\"userId\");\r\n    event.stateId = 5;\r\n    this.updateEvent(event);\r\n  }\r\n\r\n  openDialog(content: String, title: String) {\r\n    const dialogRef = this._matDialog.open(DialogComponent);\r\n    this._dialogService.dialog.title = title;\r\n    this._dialogService.dialog.content = content;\r\n  }\r\n\r\n  async getRequests(): Promise<any> {\r\n    this.blSpinner = true;\r\n    const response = await this._requestService.getRequests();\r\n    if (response[\"result\"]) {\r\n      this.dataSource = response[\"data\"];\r\n      this.notFound = false;\r\n    } else {\r\n      this.openDialog(response[\"msg\"], \"Advertencia\");\r\n      this.notFound = true;\r\n    }\r\n    this.blSpinner = false;\r\n  }\r\n\r\n  async updateEvent(event: Events): Promise<any> {\r\n    this.blSpinner = true;\r\n    const response = await this._requestService.acceptDiscardEvent(event);\r\n\r\n    if (response[\"result\"]) {\r\n      this.openDialog(response[\"msg\"], \"Informaci√≥n\");\r\n      const responseGetEvents = await this._requestService.getRequests();\r\n      if (responseGetEvents[\"result\"]) {\r\n        this.dataSource = responseGetEvents[\"data\"];\r\n        this.notFound = false;\r\n      } else {\r\n        this.dataSource = [];\r\n        this.notFound = true;\r\n      }\r\n    } else {\r\n      this.openDialog(response[\"msg\"], \"Advertencia\");\r\n    }\r\n\r\n    this.blSpinner = false;\r\n  }\r\n}\r\n","\r\n  <div class=\"divMain\">\r\n\r\n    <div *ngIf=\"notFound\" class=\"NotFound\">\r\n      <p>{{txtNotFound}}</p>\r\n    </div>\r\n\r\n    <div *ngFor=\"let item of dataSource\" class=\"divMainCard\">\r\n      <mat-card ng-mouseover=\"'background-color': 'red'grid.appScope.onRowHover(this);\" class=\"container\">\r\n        <div class=\"txtContainer\">\r\n          <mat-card-title>{{item.name}}</mat-card-title>\r\n          <mat-card-subtitle>{{item.description}}</mat-card-subtitle>\r\n        </div>\r\n        <div>\r\n          <img src=\"{{item.image}}\" class=\"md-user-avatar\" width=\"388px\" height=\"242\" />\r\n          <div class=\"clsButtons\">\r\n            <button mat-button class=\"clsBtnRechazar\" (click)=\"discardEvent(item)\">{{buttonRechazar}}</button>\r\n            <button mat-button class=\"clsBtnAceptar\" (click)=\"acceptEvent(item)\">{{buttonAceptar}}</button>\r\n          </div>\r\n        </div>\r\n      </mat-card>\r\n    </div>\r\n\r\n\r\n    <div class=\"overlay\" *ngIf=\"blSpinner\">\r\n      <div class=\"center\">\r\n        <mat-spinner diameter=\"70\"></mat-spinner>\r\n      </div>\r\n    </div> \r\n\r\n  </div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RequestComponent } from './request.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RequestComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [RequestComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    MatTableModule,\r\n    MatCardModule,\r\n    MatGridListModule,\r\n    MatDialogModule,\r\n    MatProgressSpinnerModule,\r\n    MatButtonModule\r\n  ]\r\n})\r\nexport class RequestModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CacheService } from '../../utils/cache/cache.service';\r\nimport { Constants } from '../../utils/constants';\r\nimport { Events } from '../events/events.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RequestService {\r\n\r\n  constructor(private _http: HttpClient,\r\n    private _cacheService: CacheService) { }\r\n\r\n  async getRequests(): Promise<any> {\r\n\r\n    try {\r\n\r\n      const token = this._cacheService.load(\"token\");\r\n      const userId = this._cacheService.load(\"userId\");\r\n\r\n      const url = `${Constants.API_ENDPOINT}${Constants.EVENTS_ENDPOINT}${Constants.REQUESTS_ENDPOINT}/${userId}`;\r\n\r\n      const result = await fetch(url, {\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': token\r\n        },\r\n        method: \"GET\"\r\n      });\r\n\r\n      const response = await result.json();\r\n\r\n      if (response[\"token\"] != \"\" && response[\"token\"] != null && response[\"token\"] != undefined) {\r\n        this._cacheService.remove(\"token\");\r\n        this._cacheService.save({\r\n          key: \"token\",\r\n          data: response[\"token\"],\r\n          expirationMins: 60\r\n        });\r\n      }\r\n\r\n      return response;\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async acceptDiscardEvent(event: Events): Promise<any> {\r\n\r\n    try {\r\n\r\n      const token = this._cacheService.load(\"token\");\r\n\r\n      const url = `${Constants.API_ENDPOINT}${Constants.EVENTS_ENDPOINT}${Constants.REQUESTS_ENDPOINT}`;\r\n\r\n      const result = await fetch(url, {\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': token\r\n        },\r\n        method: \"POST\",\r\n        body: JSON.stringify(event)\r\n      });\r\n\r\n      const response = await result.json();\r\n\r\n      if (response[\"token\"] != \"\" && response[\"token\"] != null && response[\"token\"] != undefined) {\r\n        this._cacheService.remove(\"token\");\r\n        this._cacheService.save({\r\n          key: \"token\",\r\n          data: response[\"token\"],\r\n          expirationMins: 60\r\n        });\r\n      }\r\n\r\n      return response;\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}